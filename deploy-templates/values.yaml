global:
  kafkaOperator:
    replicationFactor: 3
  registry:
    digitalDocumentService:
      replicas: 1
      hpa:
        enabled: false
        minReplicas: 1
        maxReplicas: 3
      istio:
        sidecar:
          enabled: true
          resources:
            requests: {}
            limits: {}
      container:
        resources:
          requests: {}
          limits: {}
        envVars: {}
  deploymentMode: production

podAnnotations: {}
image:
  name: digital-document-service
  version: latest
port: 8080
service:
  type: ClusterIP
  port: 8080

ceph:
  bucketName: lowcode-file-storage
  host: ${CEPH_BUCKET_HOST}

s3:
  config:
    client:
      protocol: http
    options:
      pathStyleAccess: true

appConfigMountPath: "/app/config"
cephSecretMountPath: "/app/secrets/ceph"
readinessPath: "/actuator/health/readiness"
livenessPath: "/actuator/health/liveness"

ingress: # expose the service with a route or an ingress depending on platform type
  platform: openshift # openshift or kubernetes

keycloak:
  realms:
    officer: officer-portal
    citizen: citizen-portal
    admin: admin
  certificatesEndpoint: /protocol/openid-connect/certs

digitalDocuments:
  maxFileSize: 100MB
  maxTotalFileSize: 100MB

monitoring:
  namespace: openshift-monitoring
  prometheusScrapePath: /actuator/prometheus
  jobLabel: app

kafka:
  service: kafka-cluster-kafka-bootstrap:9093
  user: digital-document-service-user
  clusterName: kafka-cluster
  sslEnabled: true
  sslCertType: PEM
  sslUserKey: ${KAFKA_USER_KEYSTORE_KEY}
  sslUserCertificate: ${KAFKA_USER_KEYSTORE_CERTIFICATE}
  sslClusterCertificate: ${KAFKA_CLUSTER_TRUSTSTORE}
  numPartitions: 15
  errorHandlerInitialInterval: 1500
  errorHandlerMaxElapsedTime: 6000
  errorHandlerMultiplier: 2